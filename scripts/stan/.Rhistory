install.library(rstan)
install.packages(rstan)
install.packages('rstan')
library(rstan)
library(dplyr)
df = read_rdump('../../../data/cleaned/stan/rq1_basic_reg_normal.R.data')
df
x = df$x
n <- nrows(x)
n <- rows(x)
n <- nrow(x)
I = diag(n)
head(I)
I[1:5,1:5]
O <- matrix(1, n, n)
O <- crossprod(matrix(1,n,n))
dim(O)
O[1:5,1:5]
C <- I - O / n
cx <- C * x
dim(C)
dim(x)
cx <- C %*% x
dim(x)
dim(cx)
x[1:10,1:5]
cx[1:10,1:5]
df = read_rdump('../../../data/cleaned/stan/rq1_basic_reg_normal.R.data')
x = df$x
x[1:10,1:5]
center_matrix <- function(x) {
n <- nrow(x)
I <- diag(n)
O <- crossprod(matrix(1,n,n))
C <- I - O / n
return C %*% x
center_matrix <- function(x) {
n <- nrow(x)
I <- diag(n)
O <- crossprod(matrix(1,n,n))
C <- I - O / n
return(C %*% x)
}
cx = center_matrix(x)
cd[1:10,1:5]
cx[1:10,1:5]
center_matrix <- function(x) {
n <- nrow(x)
I <- diag(n)
O <- crossprod(matrix(1,n,1))
C <- I - O / n
return(C %*% x)
}
cx = center_matrix(x)
center_matrix <- function(x) {
n <- nrow(x)
I <- diag(n)
O <- matrix(1,n,n)
C <- I - O / n
return(C %*% x)
}
cx = center_matrix(x)
cx[1:10,1:5]
lapply(df, head)
dim(df$x)
length(df$y)
getwd()
x <- x[1:5,1:5]
x
stan_rdump('x', 'test.R.data')
N <- nrow(x)
stan_rdump(c('x','N'), 'test.R.data')
K <- ncol(x)
stan_rdump(c('x','N','K'), 'test.R.data')
x
center(x)
center
apply(x, 2, center)
y
y <- y[1:5,1:5]
y <- y[1:5]
lm(y ~ x)
lm(y ~ center(x))
xc <- apply(x, 2, center)
lm(y ~ xc)
list.files()
fit <- read_stan_csv(grep('samples', list.files(), value = TRUE))
install.packages(shinystan)
install.packages('shinystan')
library(shinystan)
launch_shiny(fit)
launch_shinystan(fit)
library(rscorecard)
ccb <- c(21,22,23)
loc <- 41:34
df <- sc_init() %>% 
    sc_filter(region == 2, ccbasic == c(21,22,23), locale == 41:43) %>% 
    sc_select(unitid, instnm, stabbr) %>% 
    sc_year(2013) %>% 
    sc_get()
df
df <- sc_init() %>% 
    sc_filter(region == 2, ccbasic == ccb, locale == loc) %>% 
df <- sc_init() %>% 
df
df <- sc_init() %>% 
df <- sc_init() %>% 
    sc_filter(region == 2, ccbasic == ccb, locale == loc) %>% 
sc_select(unitid, instnm, stabbr) %>% 
    sc_year(2013) %>% 
    sc_get()
df
ccb
df
quit()
library(dplyr)
library(readr)
library(lme4)
df = read_csv('/Users/benski/diss/data/cleaned/rq1/rq1_analysis.csv')
meas = 'pdw2_download'
xc = apply(x, 2, FUN = function(xx) { xx - mean(xx) })
head(xc)
xc_q = qr.Q(qr(xc))
dim(xc_q)
head(xc_q)
xc_q = qr.Q(qr(xc)) * sqrt(N - 1)
head(xc_q)
summary(lm(y ~ xc_q))
summary(lm(y ~ xc_q))
xc_r = qr.R(qr(xc)) / sqrt(N - 1)
xc_r_i = solve(xc_r)
xc_r_i
theta = summary(lm(y ~ xc_q))$coeficients
theta
theta = summary(lm(y ~ xc_q))$coefficients
theta
names(theta)
theta = summary(lm(y ~ xc_q))$coefficients[1]
theta
theta = summary(lm(y ~ xc_q))$coefficients[1,]
theta
theta = summary(lm(y ~ xc_q))$coefficients[,1]
theta
xc_r_i
dim(xc_r_i)
dim(theta)
theta = as.matrix(theta)
dim(theta)
theta = theta[2:11,]
theta
dim(theta)
theta = as.matrix(theta)
theta
beta = xc_r_i %*% theta
beta
lm(y ~ x)
vs_fit = lmer(y ~ xc_q)
vs_fit = lmer(y ~ xc_q + (1 + xq[,1:2] | state))
vs_fit = lmer(y ~ xc_q + (1 + xc_q[,1:2] | state))
vs_fit
coefs(vs_fit)
coef(vs_fit)
vs_fit = lmer(y ~ xc_q[,2:K] + (1 + xc_q[,1:2] | state))
coef(vs_fit)
vs_fit = lmer(y ~ xc_q[,3:K] + (1 + xc_q[,1:2] | state))
coef(vs_fit)
vs_fit = lmer(y ~ xc_q[,3:K] + (1 | state) + (xc_q[,1:2] | state))
coef(vs_fit)
vs_fit = lmer(y ~ xc_q[,1:2] + xc_q[,3:K] + (1 + xc_q[,1:2] | state))
coef(vs_fit)
vs_fit = lmer(y ~ xc_q[,1:2] + xc_q[,3:K] + (0 + xc_q[,1:2] | state))
coef(vs_fit)
vs_fit = lmer(y ~ xc_q[,1:2] + xc_q[,3:K] + (1 + xc_q[,1:2] | state))
coef(vs_fit)
vs_fit = lmer(y ~ xc_q[,3:K] + (1 + xc_q[,1:2] | state))
coef(vs_fit)
vs_theta = coef(vs_fit)$coefficients[,1]
vs_theta
vs_theta = coef(vs_fit)$coefficients
vs_theta
vs_theta = summary(vs_fit)$coefficients[,1]
vs_theta
vs_fit = lmer(y ~ xc_q + (1 + xc_q[,1:2] | state))
vs_fit
vs_fit = lmer(y ~ xc_q + (1 + xc_q[,1:2] || state))
vs_fit
coef(vs_fit)
coef(vs_fit)[,1]
coef(vs_fit)$state
coef(vs_fit)$state[,1]
b_state = coef(vs_fit)$state[,1]
b_state_sq = coef(vs_fit)$state[,2]
b_state = b_state + coef(vs_fit)$state[,4]
b_state_sq = b_state_sq + coef(vs_fit)$state[,5]
b_state
vs_fit = lmer(y ~ xc + (1 + xc[,1:2] || state))
vs_fit = lmer(y ~ xc + (1 + xc[,1:2] | state))
coef(vs_fit)
vs_fit = lmer(y ~ xc[,3:K] + (1 + xc[,1:2] | state))
coef(vs_fit)
vs_fit = lmer(y ~ xc[,2:K] + (1 + xc[,1] | state))
coef(vs_fit)
vs_fit
vs_fit = lmer(y ~ 0 + xc + (1 + xc[,1] | state))
coef(vs_fit)
bb <- coef(vs_fit)$state[,2] + coef(vs_fit)$state[,3]
bb
vs_fit = lmer(y ~ 0 + xc + (1 + xc[,1:2] | state))
head(xc)
bb <- coef(vs_fit)$state[,2] + coef(vs_fit)$state[,3]
coef(vs_fit)
bb <- coef(vs_fit)$state[,2] + coef(vs_fit)$state[,4]
bb_sq <- coef(vs_fit)$state[,3] + coef(vs_fit)$state[,5]
bb
bb_sq
quit()
